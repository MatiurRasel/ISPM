::> The .npmrc file is a configuration file used by 
npm (Node Package Manager) to store various settings and preferences 
related to npm and its behavior. This file is typically located 
in the root directory of your project, and it allows you to customize 
how npm operates for that specific project.

Here are some common use cases for the .npmrc file:

Registry Configuration: You can specify the registry for your project. 
For example, if you want to use a private npm registry for your project, 
you can set it in the .npmrc file.
=> registry=https://registry.npmjs.org/

Scoped Packages: If you have scoped packages, you might need to 
authenticate or set specific registry URLs for those. 
This can be configured in the .npmrc file.
=> @myscope:registry=https://registry.example.com/

Authentication: If you're using a private registry or need to authenticate,
 you might provide authentication tokens or credentials in the .npmrc file.
=> //registry.example.com/:_authToken=your-token

Proxy Configuration: If you're behind a proxy, 
you can configure npm to use the proxy in the .npmrc file. 
=> proxy=http://your-proxy-url

Dependency Resolution: You can tweak how npm resolves dependencies, 
handles versioning, etc.
=> save-exact=true




::> The legacy-peer-deps=true configuration in the .npmrc file is used to 
enable the legacy behavior of the npm client regarding peer dependencies. 
This setting affects how npm deals with packages that have specified 
peer dependencies.

In npm version 7 and later, a stricter approach to handling peer dependencies 
was introduced. When installing a package, npm checks if the installed 
dependencies meet the specified peer dependency versions. If not, it might 
raise warnings or errors, making it more explicit about potential 
compatibility issues.

Setting legacy-peer-deps=true is a way to revert to the older behavior, 
which was more lenient with peer dependencies. By enabling this configuration, 
npm will use the legacy algorithm for checking peer dependencies, potentially 
allowing installations even if peer dependencies don't strictly match the 
specified versions.